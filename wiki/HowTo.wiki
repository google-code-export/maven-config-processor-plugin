#summary How to use the maven config processor plugin
#labels Featured,Phase-Implementation,Configuration

= STEP 1: Set Maven 2 Repository =

You can use the [http://repo1.maven.org/maven2/com/google/code/maven-config-processor-plugin/maven-config-processor-plugin/ maven central repository] or configure your *pom.xml* to download plugins from the [http://maven-config-processor-plugin.googlecode.com/svn/maven-repo/ GoogleCode repository] we have set up to distribute the most recent plugin releases.

Just add the following:

{{{
<project>
    ...
    <pluginRepositories>
        ...
        <pluginRepository>
            <id>maven-config-processor-repo-releases</id>
            <url>http://maven-config-processor-plugin.googlecode.com/svn/maven-repo/releases</url>
        </pluginRepository>
        ...
    </pluginRepositories>
    ...
</project>
}}}

= STEP 2: Configure the Plugin =

In general, you will want to configure the plugin to run only when a specific profile is activated, to do this, you should add something like this to your *pom.xml*:

{{{
<project>
    ...
    <profiles>
        ...
        <profile>
            <id>qa</id>
            <build>
                <plugins>
                    ...
                    <plugin>
                        <groupId>com.google.code.maven-config-processor-plugin</groupId>
                        <artifactId>maven-config-processor-plugin</artifactId>
                        <configuration>
                            <specificProperties>src/main/assembly/qa.properties</specificProperties>
                            <transformations>
                                ...
                                <transformation>
                                    <input>src/main/resources/my-config.properties</input>
                                    <output>target/processed-files/my-config.properties</output>
                                    <config>src/main/assembly/qa/my-config-processing.xml</config>
                                </transformation>
                                ...
                            </transformations>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>process</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    ...
                </plugins>
            </build>
        </profile>
        ...
    </profiles>
</project>
}}}

Of course, you are not limited to profiles. You can configure the plugin to run whenever you build your project.

= STEP 3: Configure File Transformations =

In the previous step we specified that the file _my-config.properties_ must be processed according to the rules configured in _my-config-processing.xml_ and the output should go to _target/processed-files/my-config.properties_.

Now we have to create the rules to process the file. Please, refer to TransformationConfiguration to see how to create rules and PluginConfiguration to see all the properties you can set to customize the plugin execution.

= STEP 4: Process Files =

In order to process the _my-config.properties_ file specified in the previous step, you can execute the following command:

{{{mvn clean install -P qa}}}

This will execute the only goal of the plugin (process) and create the output file _my-config.properties_ in _target/processed-files_ so that you can, for instance, configure the [http://maven.apache.org/plugins/maven-assembly-plugin/ assembly plugin] to copy it to the assembly package to be ready for QA tests.